image: registry.stuhome.com/devops/dockerepo/docker:1.0.2

before_script:
  - pkg/scripts/install.sh /opt/runtime
  - source runtime_env

variables:
    GIT_SUBMODULE_STRATEGY: recursive
    ENV: ci

stages:
  - package
  - base_image
  - test_scripts
  - build
  - test
  - pre_deploy

package-sae-runtime-manifests:
    stage: package
    script:
    - rm .gitlab-ci.yml 
    - ci_build package -e sae_runtime_$CI_COMMIT_REF_NAME ./pkg/scripts
    allow_failure: false

baseimage-fpm-apline-72:
    stage: base_image
    script:
    - ci_build docker -e php_fpm/$CI_COMMIT_REF_NAME -t 7.2 -- -f ./docker/baseimage/Dockerfile-fpm-72-alpine .

baseimage-alpine-36:
    stage: base_image
    script:
    - ci_build docker -e alpine/$CI_COMMIT_REF_NAME -t 3.6 -- -f ./docker/baseimage/Dockerfile-alpine36 .

baseimage-alpine-37:
    stage: base_image
    script:
    - ci_build docker -e alpine/$CI_COMMIT_REF_NAME -t 3.7 -- -f ./docker/baseimage/Dockerfile-alpine37 .

build-wing-executable:
    cache:
      paths:
      - ./build/pkg
      - /apk-cache
      - ./dashboard/node_modules

    image: golang:1.12-alpine
    before_script: ['']
    stage: build
    script:
    - mkdir /apk-cache
    - sed -Ei "s/dl-cdn\.alpinelinux\.org/mirrors.ustc.edu.cn/g" /etc/apk/repositories
    - apk update --cache-dir /apk-cache
    - apk add -t build-deps make git gcc g++ nodejs curl openssl nodejs-npm python
    - apk add bash vim jq docker
    - npm set strict-ssl false
    - npm config set registry http://registry.npm.taobao.org
    - MAKE_ENV_ARGV="http_proxy=socks5://10.240.0.1:5356 https_proxy=socks5://10.240.0.1:5356" sh ./build.sh
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - ./upload_product.sh
    allow_failure: false

test-sae-runtime-build-image:
    stage: test_scripts
    script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - runtime_image_base_image -p sunmxt/wing/alpine -e $CI_COMMIT_REF_NAME -t 3.7
    - build_runtime_image -t gitlab_ci_commit_hash -e sar_runtime_test_$CI_COMMIT_REF_NAME
    when: always

test-build-lnmp-image:
    stage: test_scripts
    script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - runtime_image_base_image -p sunmxt/wing/php_fpm -e $CI_COMMIT_REF_NAME -t 7.2
    - runtime_image_post_build_script ./pkg/scripts/ci/ci_lnmp_postbuild.sh
    - runtime_image_add_service normal php_fpm /usr/local/sbin/php-fpm
    - runtime_image_add_service normal nginx /usr/sbin/nginx -g 'daemon off;'
    - build_runtime_image -h ./pkg/scripts/ci/ci_lnmp_postbuild.sh -e sar_runtime_test_$ENV --ignore-runtime
    variables:
        ENV: ci_lnmp
    when: always

test-script-bundle:
    stage: test_scripts
    before_script: []
    script:
    - pkg/scripts/bin/sar_execute
    - bash -c 'pkg/scripts/bin/sar_execute sar_bundle build/resource shim.sh'
    - source build/resource/shim.sh
    when: always

test-pull-package:
    stage: test_scripts
    script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - ci_package_pull -e sae_runtime_$CI_COMMIT_REF_NAME ./testing_pull
    when: always

test-no-push:
    stage: test_scripts
    script:
    - source ./pkg/scripts/ci/docker_push_gate.sh
    - runtime_image_base_image -p sunmxt/wing/alpine -e $CI_COMMIT_REF_NAME -t 3.7
    - build_runtime_image -t gitlab_ci_commit_hash -e sar_runtime_test_no_push_$CI_COMMIT_REF_NAME -s -f
    - ci_build package -t gitlab_ci_commit_hash -e sar_runtime_test_no_push_$CI_COMMIT_REF_NAME -s -f ./
    when: always

build-wing-runtime-image:
    stage: pre_deploy
    script:
    - runtime_image_base_image -p sunmxt/wing/alpine -e $CI_COMMIT_REF_NAME -t 3.7
    - runtime_image_add_dependency -t latest -r $CI_REGISTRY_IMAGE -e CI_COMMIT_REF_NAME /opt/exec
    - runtime_image_add_service normal wing /opt/exec/wing serve -config=/etc/wing/config.yml
    - build_runtime_image -e CI_COMMIT_REF_NAME