---
apiVersion: core/v1
kind: ServiceAccount
metadata: 
  name: Wing
  labels:
    starstudio.org/app: wing
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: WingOrchestration
  labels:
    starstudio.org/app: wing
rules:
- apiGroups: core
  resources: ["namespace", "pod"]
  verbs: ["*"]
- apiGroups: apps
  resources: ["deployment"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: WingOrchestration
  labels:
    starstudio.org/app: wing
roleRefs:
- name: WingOrchestration
subjects:
- name: Wing
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: WingConfig
  labels:
    starstudio.org/app: wing
data:
  config.yml: |
    bind: 0.0.0.0:8077
    database:
      dsn: "root:123456@tcp(127.0.0.1:3306)/wing?charset=utf8&parseTime=true"
      engine: mysql
    kubernetes:
      namespacePrefix: wing_
    
---
apiVersion: v1
kind: Deployment
metadata:
  name: Wing
  labels:
    starstudio.org/app: wing
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      git.stuhome.com: wing
  template:
    metadata:
      annotations:
        starstudio.org/wing: wing-server
      labels:
        starstudio.org/app: wing
    spec:
      containers:
      - image: ${k8s_target_image_tag}
        name: WingServer
        command:
        - /bin/wing
        args:
        - serve -config=/etc/wing/config.yml
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8077
          protocol: TCP
        dnsPolicy: ClusterFirst
        volumeMounts:
        - name: wing-config
          mountPath: /etc/wing
          readOnly: true
      volumes:
      - name: wing-config
        configMap:
          name: WingConfig
      serviceAccount: Wing
---
kind: Service
apiVersion: v1
metadata:
  name: Wing
  labels:
    starstudio.org/app: wing
  namespace: kube-system
spec:
  ports:
  - port: 80
    targetPort: 8077
  selector:
    starstudio.org/app: wing